[{"path":"https://wevertonbio.github.io/florabr/articles/Spatialize_florabr.html","id":"loading-data","dir":"Articles","previous_headings":"","what":"Loading data","title":"3. Using florabr to flag erroneous records","text":"begin, use load_florabr function load data. detailed information obtaining loading data, please refer 1. Getting started florabr","code":"library(florabr) library(terra) #Folder where you stored the data with the function get_florabr() #Load data bf <- load_florabr(data_dir = my_dir,                    data_version = \"Latest_available\",                    type = \"short\") #short version #> Loading version 393.389"},{"path":"https://wevertonbio.github.io/florabr/articles/Spatialize_florabr.html","id":"get-spatial-polygons-of-species-distribution","dir":"Articles","previous_headings":"","what":"Get spatial polygons of species distribution","title":"3. Using florabr to flag erroneous records","text":"Brazilian Flora 2020 provides information federal states biomes confirmed occurrences species Brazil. get_spat_occ function extracts information return Spatial polygons (SpatVectors) representing distribution specie. can choose getting Spatialvector federal states, biomes intersection states biomes. SpatVectors stored nested list species:","code":"#Example species spp <- c(\"Araucaria angustifolia\", \"Adesmia paranensis\") #Get spatial polygons spp_spt <- get_spat_occ(data = bf, species = spp,                        State = TRUE, Biome = TRUE, intersection = TRUE,                        verbose = TRUE) #> Getting states of Araucaria angustifolia  #> Getting biomes of Araucaria angustifolia  #> Getting biomes of Araucaria angustifolia  #> Getting states of Adesmia paranensis  #> Getting biomes of Adesmia paranensis  #> Getting biomes of Adesmia paranensis par(mfrow = c(3, 2), mar = c(2, 0, 2, 0))  plot(spp_spt$`Araucaria angustifolia`$States,      main = paste0(names(spp_spt)[[1]], \" - States\"), mar = NA) plot(spp_spt$`Araucaria angustifolia`$Biomes,      main = paste0(names(spp_spt)[[1]], \" - Biomes\"), mar = NA) plot(spp_spt$`Araucaria angustifolia`$States_Biomes,      main = paste0(names(spp_spt)[[1]], \" - Intersection\"), mar = NA) plot(spp_spt$`Adesmia paranensis`$States,      main = paste0(names(spp_spt)[[2]], \" - States\"), mar = NA) plot(spp_spt$`Adesmia paranensis`$Biomes,      main = paste0(names(spp_spt)[[2]], \" - Biomes\"), mar = NA) plot(spp_spt$`Adesmia paranensis`$States_Biomes,      main = paste0(names(spp_spt)[[2]], \" - Intersection\"), mar = NA)"},{"path":"https://wevertonbio.github.io/florabr/articles/Spatialize_florabr.html","id":"including-a-more-complex-polygon-of-states-and-biomes","dir":"Articles","previous_headings":"Get spatial polygons of species distribution","what":"Including a more complex polygon of states and biomes","title":"3. Using florabr to flag erroneous records","text":"default, florabr uses simplified polygon federal States biomes, reduced number nodes representing boundaries states biomes (check ?terra::simplifyGeom):  can work original spatial polygons, represents better real shapes boundaries states biomes. , let’s get original data geobrpackage: Let`s start polygon federal states Brazil: Note now, geometries br_states (simplified) complex simplified states: Now, let’s get original polygons biomes: names biomes Portuguese. need translate Amazonia Mata Atlantica English match names Brazilian Flora database: Now, SpatVector biomes also ready use. Let’s see difference use non-simplified Spatvectors get_spat_occ: See difference: now, polygons representing distribution species states biomes complex:  choose using simplified version (default) using personal e complex polygons depends objectives resolution work. objective depends fine resolution, suggest use complex polygons represent better real shapes boundaries states biomes.","code":"data(\"states\") states <- terra::unwrap(states) data(\"biomes\") biomes <- terra::unwrap(biomes) par(mfrow = c(2, 1), mar = c(0, 0, 0, 0))  plot(states, main = \"Brazilian states with simplified geometries\") plot(biomes, main = \"Brazilian biomes with simplified geometries\") #Install geobr if necessary and load package if(!require(geobr)){     install.packages(\"geobr\") } #Load geobr library(geobr) br_states <- geobr::read_state(simplified = FALSE) #Convert br_states from sf to SpatVect br_states <- vect(br_states) #Plot only State of Parana as example par(mfrow = c(1, 2), mar = c(2, 2, 2, 2))  plot(br_states[br_states$abbrev_state == \"PR\"],      main = \"Not simplified geometries\", mar = NA) plot(states[states$abbrev_state == \"PR\"],      main = \"Simplified geometries\",      mar = NA) br_biomes <- geobr::read_biomes() #Convert br_biomes from sf to SpatVect br_biomes<- terra::vect(br_biomes) #Drop off coastal system: br_biomes <- terra::subset(br_biomes,                             br_biomes$name_biome != \"Sistema Costeiro\") #See names of biomes br_biomes$name_biome #Names that must be in the Spatvector to match with Brazilian Flora: biomes$name_biome #> [1] \"Amazônia\"       \"Caatinga\"       \"Cerrado\"        \"Mata Atlântica\" #> [5] \"Pampa\"          \"Pantanal\" #Translate br_biomes$name_biome[which(br_biomes$name_biome == \"Amazônia\")] <- \"Amazon\" br_biomes$name_biome[which(   br_biomes$name_biome == \"Mata Atlântica\")] <- \"Atlantic_Forest\" spp_spt_2 <- get_spat_occ(data = bf, species = spp,                 State = TRUE, Biome = TRUE, intersection = TRUE,                 State_vect = br_states, #The non-simplified Spatvector                 state_column = \"abbrev_state\", #Column name with states acronyms                 Biome_vect = br_biomes, #The non-simplified Spatvector                 biome_column = \"name_biome\", #Column name with names of biomes                 verbose = TRUE) par(mfrow = c(2, 2), mar = c(2, 2, 2, 2))  plot(spp_spt$`Araucaria angustifolia`$States,      main = paste0(names(spp_spt)[[1]], \" - States simplified\"), mar = NA) plot(spp_spt_2$`Araucaria angustifolia`$States,      main = paste0(names(spp_spt)[[1]], \" - States non-simplified\"), mar = NA) plot(spp_spt$`Araucaria angustifolia`$Biomes,      main = paste0(names(spp_spt)[[1]], \" - Biomes simplified\"), mar = NA) plot(spp_spt$`Araucaria angustifolia`$Biomes,      main = paste0(names(spp_spt)[[1]], \" - Biomes non-simplified\"), mar = NA)"},{"path":"https://wevertonbio.github.io/florabr/articles/Spatialize_florabr.html","id":"filtering-occurrence-records-using-distribution-information-in-brazilian-flora","dir":"Articles","previous_headings":"","what":"Filtering occurrence records using distribution information in Brazilian Flora","title":"3. Using florabr to flag erroneous records","text":"Georeferencing errors online species records can introduce significant bias ecological biogeographical research findings. R packages, CoordinateCleaner, help flagging common spatial errors biological collection data, example, records terrestrial organism fall sea assigned capital province centroids. Since distributions species Brazilian Flora based expertise taxonomists, represents valuable information add additional step checking validity occurrence records got online databases (GBIF SpeciesLink). filter_florabr function automatized flagging. can use function flag /remove: * Records fall outside states biomes confirmed occurrence according Brazilian Flora. * species endemic Brazil, records falls countries. example, let’s use occurrence records two species. Abatia americana endemic shrub confirmed occurrences 4 states (ES, MG, RJ SP) two biomes (Atlantic Forest Cerrado). Araucaria angustifolia non-endemic tree Brazil confirmed occurrences 6 states (MG, PR, RJ, RS, SC SP) two biomes (Atlantic Forest Pampa). Let’s plot information using function get_spat_occ: downloaded occurrences two species GBIF using plantR::rgbif2() function. occurrences saved data examples package can import : input data records must dataframe least 3 columns: one informing species name, one informing longitude one informing latitude. Let’s check records outside species’ natural ranges considering states, biomes endemism: Since set value = “flag&clean”, function returned list two data.frames: one records flagged test passed (TRUE) (FALSE); another records passed tests. Let’s use mapview package plot interactive map flagged records: Let’s check records Abatia americana, plotting records map got previously. can see green records passed test States, falling states confirmed occurrence specie. red dots records falls outside states. gray dots records testes falls outside Brazil (Ecuador Belarus).  can see biomes: green dots represents records passed test, green dots represents records passed test, gray dots records tested fall outside Brazil.  Finally, since Abatia americana specie endemic Brazil, don’t expect records outside country. records Ecuador Belarus flagging test:","code":"my_spp <- c(\"Abatia americana\", \"Araucaria angustifolia\") pol_spp <- get_spat_occ(data = bf, species = my_spp,                        State = TRUE, Biome = TRUE, intersection = TRUE,                        verbose = TRUE) par(mfrow = c(2, 2), mar = c(2, 0, 2, 0))  plot(pol_spp$`Abatia americana`$States,      main = paste0(names(pol_spp)[[1]], \" - States\"), mar = NA) plot(pol_spp$`Abatia americana`$Biomes,      main = paste0(names(pol_spp)[[1]], \" - Biomes\"), mar = NA) plot(pol_spp$`Araucaria angustifolia`$States,      main = paste0(names(pol_spp)[[2]], \" - States\"), mar = NA) plot(pol_spp$`Araucaria angustifolia`$Biomes,      main = paste0(names(pol_spp)[[2]], \" - Biomes\"), mar = NA) data(\"occurrences\") #select Abatia americana and Araucaria angustifolia from the dataset occ <- subset(occurrences, occurrences$species %in% my_spp) head(occ) #>                  species         x         y #> 1 Araucaria angustifolia -51.15749 -29.58290 #> 2 Araucaria angustifolia -50.02454 -28.44414 #> 3 Araucaria angustifolia -46.77204 -23.45729 #> 4 Araucaria angustifolia -48.98117 -25.49632 #> 5 Araucaria angustifolia -54.50869 -25.55113 #> 6 Araucaria angustifolia -50.92680 -27.01826 occ_check <- filter_florabr(data = bf, occ = occ,                     by_State = TRUE, buffer_State = 20,                     by_Biome = TRUE, buffer_Biome = 20,                     by_Endemism = TRUE, Buffer_Brazil = 20,                     State_vect = NULL,                     Biome_vect = NULL, BR_vect = NULL,                     value = \"flag&clean\", keep_columns = TRUE,                     verbose = FALSE) #> Returning list with flagged and cleaned occurrences #Install mapview if necessary and load package if(!require(mapview)){     install.packages(\"geobr\") } #Load mapview library(mapview) #Convert points to spatvector abatia_occ <- subset(occ_check$flagged,                      occ_check$flagged$species == \"Abatia americana\") abatia_occ <- vect(abatia_occ, geom = c(\"x\", \"y\"))  #Iteractive plot mapview(pol_spp$`Abatia americana`$States) +   mapview(abatia_occ, zcol = \"Inside_State\",           col.regions = c(\"red\", \"green\")) #Iteractive plot mapview(pol_spp$`Abatia americana`$Biomes) +   mapview(abatia_occ, zcol = \"Inside_Biome\",           col.regions = c(\"red\", \"green\")) #Get Brazl Polygon br <- geobr::read_country() #Iteractive plot mapview(br) +   mapview(abatia_occ, zcol = \"Inside_BR\",           col.regions = c(\"red\", \"green\"))"},{"path":[]},{"path":"https://wevertonbio.github.io/florabr/articles/getting_started.html","id":"what-is-brazilian-flora-2020","dir":"Articles","previous_headings":"Introduction","what":"What is Brazilian Flora 2020?","title":"1. Getting started with florabr","text":"Brazilian Flora 2020 comprehensive work reliably document Brazilian plant diversity. involves work hundreds taxonomists, integrating data plant fungi collected Brazil last two centuries. database contains detailed standardized morphological descriptions, illustrations, nomenclatural data, geographic distribution, keys identification native non-native plants found Brazil. florabr package includes collection functions designed retrieve, filter spatialize data Brazilian Flora 2020 dataset.","code":""},{"path":"https://wevertonbio.github.io/florabr/articles/getting_started.html","id":"overview-of-the-functions","dir":"Articles","previous_headings":"","what":"Overview of the functions:","title":"1. Getting started with florabr","text":"get_florabr: download latest older version Brazilian Flora 2020 database. check_version: check latest version Brazilian Flora data available directory. load_florabr: load Brazilian Flora database. get_attributes: display options available filter species characteristics. select_species: filter species based characteristics distribution. get_binomial: extract binomial name (Genus + specific epithet) Scientific Name. check_names: check species names correct. subset_species: subset list species Brazilian Flora 2020. get_spat_occ: get Spatial polygons (SpatVectors) species based distribution. filter_florabr: removes flags records outside species’ natural ranges.","code":""},{"path":[]},{"path":"https://wevertonbio.github.io/florabr/articles/getting_started.html","id":"install-stable-version-from-cran","dir":"Articles","previous_headings":"Installation","what":"Install stable version from CRAN","title":"1. Getting started with florabr","text":"install stable version florabr use:","code":"install.packages(\"florabr\")"},{"path":"https://wevertonbio.github.io/florabr/articles/getting_started.html","id":"install-development-version-from-github","dir":"Articles","previous_headings":"Installation","what":"Install development version from GitHub","title":"1. Getting started with florabr","text":"can install released version florabr github :","code":"if(!require(devtools)){     install.packages(\"devtools\") }  if(!require(florabr)){ devtools::install_github('wevertonbio/florabr')}  library(florabr)"},{"path":"https://wevertonbio.github.io/florabr/articles/getting_started.html","id":"get-data-from-brazilian-flora","dir":"Articles","previous_headings":"","what":"Get data from Brazilian Flora","title":"1. Getting started with florabr","text":"data included Brazilian Flora (.e., nomenclature, life form, distribution) stored Darwin Core Archive data sets, updated weekly. downloading data available Brazilian Flora 2020, need create folder save data: can now utilize get_florabr function retrieve recent version data: function take seconds download data minutes merge datasets single data.frame. Upon successful completion, find folder named version Brazilian Flora. folder contains downloaded raw dataset (TXT files Portuguese) file named CompleteBrazilianFlora.rds. latter represents finalized dataset, merged translated English. also option download older, specific version Brazilian Flora dataset. explore available versions, please refer link. downloading particular version, simply replace ‘latest’ desired version number. example: previously mentioned, find folder named ‘393.385’ within designated directory. view available versions specified directory, run:","code":"#Creating a folder in a temporary directory #Replace 'file.path(tempdir(), \"florabr\")' by a path folder to be create in  #your computer my_dir <- file.path(file.path(tempdir(), \"florabr\")) dir.create(my_dir) get_florabr(output_dir = my_dir, #directory to save the data             data_version = \"latest\", #get the most recent version available             overwrite = T) #Overwrite data, if it exists get_florabr(output_dir = my_dir, #directory to save the data             data_version = \"393.385\", #Version 393.385, published on 2023-07-21             overwrite = T) #Overwrite data, if it exists check_version(data_dir = my_dir) #> You have the following versions of Brazilian Flora: #>  393.385 #> 393.389  #>  It includes the latest version:  393.389"},{"path":"https://wevertonbio.github.io/florabr/articles/getting_started.html","id":"loading-the-data","dir":"Articles","previous_headings":"","what":"Loading the data","title":"1. Getting started with florabr","text":"order use functions package, need load data environment. achieve , utilize load_florabr() function. default, function automatically search latest available version directory. However, option specify particular version using data_version parameter. Additionally, can choose two versions data: ‘short’ version (containing 19 columns required run functions package) ‘complete’ version (original 39 columns). function imports ‘short’ version default. Note complete version 20 columns: want save datasets open external editor (e.g. Excel), can save data.frame CSV file:","code":"#Short version bf <- load_florabr(data_dir = my_dir,                    data_version = \"Latest_available\",                    type = \"short\") #short #> Loading version 393.389 colnames(bf) #See variables from short version #>  [1] \"species\"             \"scientificName\"      \"acceptedName\"        #>  [4] \"kingdom\"             \"Group\"               \"Subgroup\"            #>  [7] \"family\"              \"genus\"               \"lifeForm\"            #> [10] \"habitat\"             \"Biome\"               \"States\"              #> [13] \"vegetationType\"      \"Origin\"              \"Endemism\"            #> [16] \"taxonomicStatus\"     \"nomenclaturalStatus\" \"vernacularName\"      #> [19] \"taxonRank\" #Complete version bf_complete <- load_florabr(data_dir = my_dir,                    data_version = \"Latest_available\",                    type = \"complete\") #complete  colnames(bf_complete) #See variables from complete version #>  [1] \"id\"                       \"taxonID\"                  #>  [3] \"acceptedNameUsageID\"      \"parentNameUsageID\"        #>  [5] \"originalNameUsageID\"      \"Group\"                    #>  [7] \"Subgroup\"                 \"species\"                  #>  [9] \"acceptedName\"             \"scientificName\"           #> [11] \"acceptedNameUsage\"        \"parentNameUsage\"          #> [13] \"namePublishedIn\"          \"namePublishedInYear\"      #> [15] \"higherClassification\"     \"kingdom\"                  #> [17] \"phylum\"                   \"class\"                    #> [19] \"order\"                    \"family\"                   #> [21] \"genus\"                    \"specificEpithet\"          #> [23] \"infraspecificEpithet\"     \"taxonRank\"                #> [25] \"scientificNameAuthorship\" \"taxonomicStatus\"          #> [27] \"nomenclaturalStatus\"      \"vernacularName\"           #> [29] \"lifeForm\"                 \"habitat\"                  #> [31] \"vegetationType\"           \"Origin\"                   #> [33] \"Endemism\"                 \"Biome\"                    #> [35] \"States\"                   \"countryCode\"              #> [37] \"modified\"                 \"bibliographicCitation\"    #> [39] \"references\" write.csv(x = bf,           file = file.path(my_dir, \"BrazilianFlora.csv\"),           row.names = F)"},{"path":"https://wevertonbio.github.io/florabr/articles/selecting_species.html","id":"selecting-a-list-of-species","dir":"Articles","previous_headings":"","what":"Selecting a list of species","title":"2. Selecting and filtering species","text":"Selecting list target species common task macroecological conservation studies. example, researcher may seek model distribution exclusively endemic trees within designated Biome, particular state, specific vegetation type. applying different filters database, anyone can obtain verified taxonomic list Brazilian species algae, fungi, plants Brazilian state, region, biome, vegetation type. Additionally, filter can applied family, genus, life form, habitat, endemism level, origin, nomenclatural status, taxonomic status. vignette, users learn use florabr package select list species based features.","code":""},{"path":"https://wevertonbio.github.io/florabr/articles/selecting_species.html","id":"loading-data","dir":"Articles","previous_headings":"","what":"Loading data","title":"2. Selecting and filtering species","text":"begin, use load_florabr function load data. detailed information obtaining loading data, please refer [Getting started florabr] - reference vignette???","code":"library(florabr) #Folder where you stored the data with the function get_florabr() #Load data bf <- load_florabr(data_dir = my_dir,                    data_version = \"Latest_available\",                    type = \"short\") #short version #> Loading version 393.389"},{"path":"https://wevertonbio.github.io/florabr/articles/selecting_species.html","id":"selecting-a-list-of-species-1","dir":"Articles","previous_headings":"","what":"Selecting a list of species","title":"2. Selecting and filtering species","text":"One primary objectives package assist selecting species list based taxonomic classification (Kingdom, Group, Family, Genus), characteristics (life form, habitat), distribution (federal states, biomes, vegetation types, endemism). Specifically, can filter : Kingdom, Group, Subgroup, Family Genus; Lifeform Habitat; Biome, State VegetationType confirmed occurrences; Endemism (endemic non-endemic Brazil); Origin (Native, Cultivated Naturalized Brazil); TaxonomicStatus NomenclaturalStatus species. explore available options filter, use get_attributes() function desired attribute. function provide data.frame two columns: one containing available attributes English (use attributes) another attributes Portuguese. illustration, let’s consider scenario aim retrieve list native endemic trees confirmed occurrences Atlantic Forest: filter returned 2346 species meet specified criteria. ’s important note selections include species confirmed occurrences Atlantic Forest, may also confirmed occurrences biomes. wish exclusively select species confirmed occurrences Atlantic Forest, modify filter_Biome parameter “”: Now, filter resulted 1848 species, exclusively confined Atlantic Forest biome. Furthermore, package offers flexibility apply various filtering options (please consult ?select_species comprehensive details). instance, consider scenario aim compile list native endemic trees confirmed occurrences limited solely Atlantic Forest biome confirmed occurrences states Paraná (PR), Santa Catarina (SC), Rio Grande Sul (RS): utilizing filter_State = “”, selection encompassed species occurring three states, well appearing two even one . impose rigorous criterion, selecting solely species confirmed occurrences three states, can use filter_State = “”: Now, selection consists solely species confirmed occurrences specified states. However, utilizing “” argument, permit filter include species occurrences additional states. confine filter exclusively species confirmed occurrences three states, without occurrences elsewhere, can use filter_State = “”: Now, filter return 13 species, occurring PR, SC RS; recorded occurrences states.","code":"#Get available options to filter by lifeForm get_attributes(data = bf,                attribute = \"lifeForm\",                Kingdom = \"Plantae\") #>               lifeForm            Forma_de_vida #> 1      Aquatic-Benthos          Aquatica-Bentos #> 2      Aquatic-Neuston         Aquatica-Neuston #> 3     Aquatic-Plankton        Aquatica-Plancton #> 4                Shrub                  Arbusto #> 5                 Tree                   Arvore #> 6               Bamboo                    Bambu #> 7              Cushion                    Coxim #> 8             Dendroid                Dendroide #> 9              Unknown             Desconhecida #> 10          Dracaenoid               Dracenoide #> 13                Herb                     Erva #> 14          Flabellate                Flabelado #> 15             Foliose                  Folhosa #> 16 Liana/scandent/vine Liana/voluvel/trepadeira #> 19           Palm_tree                 Palmeira #> 21             Pendent                 Pendente #> 23            Subshrub               Subarbusto #> 24           Succulent                Suculenta #> 25            Thallose                   Talosa #> 26                 Mat                   Tapete #> 27                Weft                    Trama #> 28                Tuft                     Tufo  #Get available options to filter by  Biome get_attributes(data = bf,                attribute = \"Biome\",                Kingdom = \"Plantae\") #>                 Biome                Bioma #> 1              Amazon             Amazonia #> 2     Atlantic_Forest       Mata_Atlantica #> 3            Caatinga             Caatinga #> 4             Cerrado              Cerrado #> 5               Pampa                Pampa #> 6            Pantanal             Pantanal #> 7 Not_found_in_Brazil Nao_ocorre_no_Brasil  #Get available options to filter by VegetationType get_attributes(data = bf,                attribute = \"vegetationType\",                Kingdom = \"Plantae\") #>                     VegetationType                           TipoVegetacao #> 1                   Anthropic_Area                          Area Antropica #> 2                         Caatinga                Caatinga (stricto sensu) #> 3            Amazonian_Campinarana                             Campinarana #> 4          High_Altitude_Grassland                       Campo de Altitude #> 5                    Flooded_Field                         Campo de Varzea #> 6                        Grassland                             Campo Limpo #> 7             Highland_Rocky_Field                          Campo rupestre #> 8                         Carrasco                                Carrasco #> 9                          Cerrado                    Cerrado (lato sensu) #> 10                  Gallery_Forest              Floresta Ciliar ou Galeria #> 11          Inundated_Forest_Igapo                       Floresta de Igapo #> 12              Terra_Firme_Forest                 Floresta de Terra Firme #> 13                Inundated_Forest                      Floresta de Varzea #> 14    Seasonallly_Deciduous_Forest            Floresta Estacional Decidual #> 15       Seasonal_Evergreen_Forest         Floresta Estacional Perenifolia #> 16 Seasonally_Semideciduous_Forest        Floresta Estacional Semidecidual #> 17                      Rainforest Floresta Ombrofila (= Floresta Pluvial) #> 18      Mixed_Ombrophyllous_Forest                Floresta Ombrofila Mista #> 19                        Mangrove                               Manguezal #> 20                      Palm_Grove                               Palmeiral #> 21                        Restinga                                Restinga #> 22               Amazonian_Savanna                        Savana Amazonica #> 23              Aquatic_Vegetation                      Vegetacao Aquatica #> 24         Rock_outcrop_Vegetation   Vegetacao Sobre Afloramentos Rochosos #> 25             Not_found_in_Brazil                    Nao ocorre no Brasil af_spp <- select_species(data = bf,                       include_subspecies = FALSE, include_variety = FALSE,                       Kingdom = \"Plantae\", Group = \"All\", Subgroup = \"All\",                       Family = \"All\", Genus = \"All\",                       LifeForm = \"Tree\", #Specify tree species                       filter_LifeForm = \"in\",                       Habitat = \"All\", filter_Habitat = \"in\",                       Biome = \"Atlantic_Forest\", #Occuring in the At. Forest                       filter_Biome = \"in\", #In Atlantic Forest                       State = \"All\", filter_State = \"in\",                       VegetationType = \"All\", filter_Vegetation = \"in\",                       Endemism = \"Endemic\", #Only endemics to Brazil                       Origin = \"Native\", #Only natives                       TaxonomicStatus = \"Accepted\",                       NomenclaturalStatus = \"All\") nrow(af_spp) #> [1] 2346 #First 7 unique values of biomes in the filtered dataset unique(af_spp$Biome)[1:7] #> [1] \"Atlantic_Forest\"                         #> [2] \"Atlantic_Forest;Cerrado\"                 #> [3] \"Atlantic_Forest;Caatinga\"                #> [4] \"Amazon;Atlantic_Forest;Caatinga;Cerrado\" #> [5] \"Amazon;Atlantic_Forest;Cerrado\"          #> [6] \"Atlantic_Forest;Caatinga;Cerrado\"        #> [7] \"Amazon;Atlantic_Forest\" only_af_spp <- select_species(data = bf,                       include_subspecies = FALSE, include_variety = FALSE,                       Kingdom = \"Plantae\", Group = \"All\", Subgroup = \"All\",                       Family = \"All\", Genus = \"All\",                       LifeForm = \"Tree\", #Specify tree species                       filter_LifeForm = \"in\",                       Habitat = \"All\", filter_Habitat = \"in\",                       Biome = \"Atlantic_Forest\", #Occuring in the At. Forest                       filter_Biome = \"only\", #ONLY in Atlantic Forest                       State = \"All\", filter_State = \"in\",                       VegetationType = \"All\", filter_Vegetation = \"in\",                       Endemism = \"Endemic\", #Only endemics to Brazil                       Origin = \"Native\", #Only natives                       TaxonomicStatus = \"Accepted\",                       NomenclaturalStatus = \"All\") nrow(only_af_spp) #> [1] 1848 unique(only_af_spp$Biome) #> [1] \"Atlantic_Forest\" south_af_spp <- select_species(data = bf,                       include_subspecies = FALSE, include_variety = FALSE,                       Kingdom = \"Plantae\", Group = \"All\", Subgroup = \"All\",                       Family = \"All\", Genus = \"All\",                       LifeForm = \"Tree\", #Specify tree species                       filter_LifeForm = \"in\",                       Habitat = \"All\", filter_Habitat = \"in\",                       Biome = \"Atlantic_Forest\", #Occuring in the At. Forest                       filter_Biome = \"only\", #Only in Atlantic Forest                       State = c(\"PR\", \"SC\", \"RS\"), #States - Use the acronynms                       filter_State = \"in\", #IN at least one of these states                       VegetationType = \"All\", filter_Vegetation = \"in\",                       Endemism = \"Endemic\", #Only endemics to Brazil                       Origin = \"Native\", #Only natives                       TaxonomicStatus = \"Accepted\",                       NomenclaturalStatus = \"All\") nrow(south_af_spp) #> [1] 370  #First 10 unique values of states in the filtered dataset unique(south_af_spp$States)[1:10] #>  [1] \"BA;ES;PR;RJ;SC;SP\"               \"AL;BA;CE;ES;MA;MG;PB;PE;PR;RJ;SE;SP\" #>  [3] \"PR;RS;SC\"                        \"BA;CE;ES;MA;MG;PE;PR;RJ;SP\"          #>  [5] \"MG;PR;RJ;SC;SP\"                  \"MG;PR;RJ;RS;SC;SP\"                   #>  [7] \"BA;ES;MG;PR;RJ;SC;SP\"            \"MG;PR;RS;SC;SP\"                      #>  [9] \"PR;RJ;RS;SC;SP\"                  \"ES;MG;PR;RJ;RS;SC;SP\" south_af_spp2 <- select_species(data = bf,                       include_subspecies = FALSE, include_variety = FALSE,                       Kingdom = \"Plantae\", Group = \"All\", Subgroup = \"All\",                       Family = \"All\", Genus = \"All\",                       LifeForm = \"Tree\", #Specify tree species                       filter_LifeForm = \"in\",                       Habitat = \"All\", filter_Habitat = \"in\",                       Biome = \"Atlantic_Forest\", #Occurring in the At. Forest                       filter_Biome = \"only\", #Only in Atlantic Forest                       State = c(\"PR\", \"SC\", \"RS\"), #States - Use the acronynms                       filter_State = \"and\", #PR and SC and RS                       VegetationType = \"All\", filter_Vegetation = \"in\",                       Endemism = \"Endemic\", #Only endemics to Brazil                       Origin = \"Native\", #Only natives                       TaxonomicStatus = \"Accepted\",                       NomenclaturalStatus = \"All\") nrow(south_af_spp2) #> [1] 29  #All unique states in the filtered dataset unique(south_af_spp2$States) #> [1] \"PR;RS;SC\"       \"MG;PR;RS;SC;SP\" \"PR;RS;SC;SP\"    \"ES;PR;RS;SC;SP\" #> [5] \"MG;PR;RS;SC\" south_af_spp3 <- select_species(data = bf,                       include_subspecies = FALSE, include_variety = FALSE,                       Kingdom = \"Plantae\", Group = \"All\", Subgroup = \"All\",                       Family = \"All\", Genus = \"All\",                       LifeForm = \"Tree\", #Specify tree species                       filter_LifeForm = \"in\",                       Habitat = \"All\", filter_Habitat = \"in\",                       Biome = \"Atlantic_Forest\", #Occuring in the At. Forest                       filter_Biome = \"only\", #Only in Atlantic Forest                       State = c(\"PR\", \"SC\", \"RS\"), #States - Use the acronynms                       filter_State = \"only\", #PR and SC and RS, no other else                       VegetationType = \"All\", filter_Vegetation = \"in\",                       Endemism = \"Endemic\", #Only endemics to Brazil                       Origin = \"Native\", #Only natives                       TaxonomicStatus = \"Accepted\",                       NomenclaturalStatus = \"All\") nrow(south_af_spp3) #> [1] 13  #The unique state in the filtered dataset unique(south_af_spp3$States) #> [1] \"PR;RS;SC\""},{"path":[]},{"path":"https://wevertonbio.github.io/florabr/articles/selecting_species.html","id":"extracting-binomial-name","dir":"Articles","previous_headings":"Checking names and subsetting species","what":"Extracting binomial name","title":"2. Selecting and filtering species","text":"addition selecting species list based characteristics, package also includes function subsetting species name. Please note function exclusively operates binomial names (Genus + specificEpithet), Araucaria angustifolia, support complete scientific names (including Author infraspecificEpithet), Araucaria angustifolia (Bertol.) Kuntze Araucaria angustifolia var. stricta Reitz. species complete scientific names, can extract binomial names using function get_binomial():","code":"complete_names <- c(\"Araucaria brasiliana var. ridolfiana (Pi.Savi) Gordon\",                     \"Solanum restingae S.Knapp\",                     \"Butia cattarinensis Noblick & Lorenzi\",                     \"Homo sapiens\") #Human specie was used just as an example that will be used to illustrate the  #next function binomial_names <- get_binomial(species_names = complete_names) binomial_names #> [1] \"Araucaria brasiliana\" \"Solanum restingae\"    \"Butia cattarinensis\"  #> [4] \"Homo sapiens\""},{"path":"https://wevertonbio.github.io/florabr/articles/selecting_species.html","id":"checking-the-species-names","dir":"Articles","previous_headings":"Checking names and subsetting species","what":"Checking the species names","title":"2. Selecting and filtering species","text":"Additionally, can verify spelling, nomenclatural status, taxonomic status species names using check_names() function. function unable locate name species database (due typo, example), can suggest potential names based similarities entries database. see function works, let’s utilize previously created binomial_names dataset: can see Araucaria brasiliana spelling correctly, synonym Araucaria angustifolia. Solanum restingae spelling correctly accepted name. case Butia cattarinensis, spelling appears potentially incorrect (name wasn’t found database); however, similar name, Butia catarinensis, suggested function. ‘Distance’ column indicates Levenshtein edit distance input suggested name. spelling Homo sapiens flagged incorrect (expected, given Homo sapiens plant!). Consequently, name located database, comparable names available.","code":"#Create example checked_names <- check_names(data = bf,                               species = binomial_names,                              max_distance = 0.1,                              Kingdom = \"Plantae\") checked_names #>             input_name          Spelling       Suggested_name Distance #> 1 Araucaria brasiliana           Correct Araucaria brasiliana        0 #> 2 Araucaria brasiliana           Correct Araucaria brasiliana        0 #> 3    Solanum restingae           Correct    Solanum restingae        0 #> 4  Butia cattarinensis Probably_incorrect   Butia catarinensis        1 #> 5         Homo sapiens         Incorrect                 <NA>       NA #>   taxonomicStatus nomenclaturalStatus           acceptedName        family #> 1         Synonym                <NA> Araucaria angustifolia Araucariaceae #> 2         Synonym        Illegitimate Araucaria angustifolia Araucariaceae #> 3        Accepted             Correct      Solanum restingae    Solanaceae #> 4        Accepted                <NA>     Butia catarinensis     Arecaceae #> 5            <NA>                <NA>                   <NA>          <NA>"},{"path":"https://wevertonbio.github.io/florabr/articles/selecting_species.html","id":"subsetting-species","dir":"Articles","previous_headings":"Checking names and subsetting species","what":"Subsetting species","title":"2. Selecting and filtering species","text":"retrieve species information Brazilian Flora database, employ subset_species() function. optimal performance, highly recommend utilizing get_binomial() check_names() functions beforehand. ensures ’re exclusively working species present Brazilian Flora database. see function works, let’s use accepted names checked_names created previously: can also include subspecies /varieties:","code":"#Get only accepted names accepted_names <- unique(checked_names$acceptedName) accepted_names <- na.omit(accepted_names) #Remove NA  #Subset species my_sp <- subset_species(data = bf, species = accepted_names,                       include_subspecies = FALSE,                       include_variety = FALSE,                       Kingdom = \"Plantae\") my_sp #>                      species                          scientificName #> 11785      Solanum restingae               Solanum restingae S.Knapp #> 26790 Araucaria angustifolia Araucaria angustifolia (Bertol.) Kuntze #> 99881     Butia catarinensis    Butia catarinensis Noblick & Lorenzi #>       acceptedName kingdom       Group Subgroup        family     genus #> 11785         <NA> Plantae Angiosperms     <NA>    Solanaceae   Solanum #> 26790         <NA> Plantae Gymnosperms     <NA> Araucariaceae Araucaria #> 99881         <NA> Plantae Angiosperms     <NA>     Arecaceae     Butia #>        lifeForm     habitat                 Biome            States #> 11785     Shrub Terrestrial       Atlantic_Forest                BA #> 26790      Tree Terrestrial Atlantic_Forest;Pampa MG;PR;RJ;RS;SC;SP #> 99881 Palm_tree Terrestrial Atlantic_Forest;Pampa             RS;SC #>       vegetationType #> 11785 Restinga #> 26790 High_Altitude_Grassland;Mixed_Ombrophyllous_Forest; #>       Seasonally_Semideciduous_Forest #> 99881 Restinga #>       Origin    Endemism taxonomicStatus nomenclaturalStatus #> 11785 Native     Endemic        Accepted             Correct #> 26790 Native Non-endemic        Accepted             Correct #> 99881 Native     Endemic        Accepted                <NA> #>       vernacularName #> 11785 <NA> #> 26790 araucaria, pinheiro-do-parana, curi, pinheiro-brasileiro,  #> pinho-do-parana #> 99881 <NA> #>       taxonRank #> 11785   Species #> 26790   Species #> 99881   Species my_sp2 <- subset_species(data = bf, species = accepted_names,                       include_subspecies = TRUE,                       include_variety = TRUE,                       Kingdom = \"Plantae\") my_sp2[1:5,] #>                      species                            scientificName #> 11785      Solanum restingae                 Solanum restingae S.Knapp #> 26790 Araucaria angustifolia   Araucaria angustifolia (Bertol.) Kuntze #> 35204 Araucaria angustifolia    Araucaria angustifolia var. alba Reitz #> 35205 Araucaria angustifolia  Araucaria angustifolia var. caiova Reitz #> 35206 Araucaria angustifolia Araucaria angustifolia var. caiuva Mattos #>                 acceptedName kingdom       Group Subgroup        family #> 11785                   <NA> Plantae Angiosperms     <NA>    Solanaceae #> 26790                   <NA> Plantae Gymnosperms     <NA> Araucariaceae #> 35204 Araucaria angustifolia Plantae Gymnosperms     <NA> Araucariaceae #> 35205 Araucaria angustifolia Plantae Gymnosperms     <NA> Araucariaceae #> 35206 Araucaria angustifolia Plantae Gymnosperms     <NA> Araucariaceae #>           genus lifeForm     habitat                 Biome            States #> 11785   Solanum    Shrub Terrestrial       Atlantic_Forest                BA #> 26790 Araucaria     Tree Terrestrial Atlantic_Forest;Pampa MG;PR;RJ;RS;SC;SP #> 35204 Araucaria                                                              #> 35205 Araucaria                                                              #> 35206 Araucaria                                                              #>       vegetationType #> 11785 Restinga #> 26790 High_Altitude_Grassland;Mixed_Ombrophyllous_Forest; #>       Seasonally_Semideciduous_Forest #> 35204                                                                          #> 35205                                                                           #> 35206                                                                         #>       Origin    Endemism taxonomicStatus nomenclaturalStatus #> 11785 Native     Endemic        Accepted             Correct #> 26790 Native Non-endemic        Accepted             Correct #> 35204   <NA>        <NA>         Synonym                <NA> #> 35205   <NA>        <NA>         Synonym                <NA> #> 35206   <NA>        <NA>         Synonym                <NA> #>       vernacularName #> 11785 <NA> #> 26790 araucaria, pinheiro-do-parana, curi, pinheiro-brasileiro, #> pinho-do-parana #> 35204 <NA> #> 35205 <NA> #> 35206 <NA> #>       taxonRank #> 11785   Species #> 26790   Species #> 35204   Variety #> 35205   Variety #> 35206   Variety"},{"path":"https://wevertonbio.github.io/florabr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Weverton Trindade. Author, maintainer.","code":""},{"path":"https://wevertonbio.github.io/florabr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Trindade W (2024). florabr: Explore Brazilian Flora 2020 Database. R package version 1.0.1, https://wevertonbio.github.io/florabr/.","code":"@Manual{,   title = {florabr: Explore Brazilian Flora 2020 Database},   author = {Weverton Trindade},   year = {2024},   note = {R package version 1.0.1},   url = {https://wevertonbio.github.io/florabr/}, }"},{"path":"https://wevertonbio.github.io/florabr/index.html","id":"florabr-","dir":"","previous_headings":"","what":"Explore Brazilian Flora 2020 Database","title":"Explore Brazilian Flora 2020 Database","text":"Brazilian Flora 2020 comprehensive work reliably document Brazilian plant diversity. involves work hundreds taxonomists, integrating data plant fungi collected Brazil last two centuries. database contains detailed standardized morphological descriptions, illustrations, nomenclatural data, geographic distribution, keys identification native non-native plants found Brazil. florabR package includes collection functions designed retrieve, filter spatialize data Brazilian Flora 2020 dataset.","code":""},{"path":[]},{"path":"https://wevertonbio.github.io/florabr/index.html","id":"download-and-import-brazilian-flora-dataset","dir":"","previous_headings":"Overview of functions","what":"Download and import Brazilian Flora Dataset","title":"Explore Brazilian Flora 2020 Database","text":"check_version(): Check latest version Brazilian Flora dataset available. get_florabr(): Download latest version Brazilian Flora 2020 database. load_florabr(): Load Brazilian Flora database.","code":""},{"path":"https://wevertonbio.github.io/florabr/index.html","id":"check-names","dir":"","previous_headings":"Overview of functions","what":"Check names","title":"Explore Brazilian Flora 2020 Database","text":"check_names(): Check species names. get_binomial(): Extract binomial name (Genus + specific epithet) complete Scientific Name.","code":""},{"path":"https://wevertonbio.github.io/florabr/index.html","id":"select-or-subset-species","dir":"","previous_headings":"Overview of functions","what":"Select or subset species","title":"Explore Brazilian Flora 2020 Database","text":"get_attributes(): Get available attributes filter species. select_by_vernacular(): Search taxa using vernacular names. select_species(): Select species based characteristics distribution. subset_species(): Extract subset species Brazilian Flora 2020 database.","code":""},{"path":"https://wevertonbio.github.io/florabr/index.html","id":"spatialize-distribution-and-use-brazilian-flora-to-flag-records","dir":"","previous_headings":"Overview of functions","what":"Spatialize distribution and use Brazilian Flora to flag records","title":"Explore Brazilian Flora 2020 Database","text":"filter_florabr(): Identify records outside natural ranges according Brazilian Flora 2020.","code":""},{"path":[]},{"path":"https://wevertonbio.github.io/florabr/index.html","id":"install-stable-version-from-cran","dir":"","previous_headings":"Installation","what":"Install stable version from CRAN","title":"Explore Brazilian Flora 2020 Database","text":"install stable version florabr use:","code":"install.packages(\"florabr\")"},{"path":"https://wevertonbio.github.io/florabr/index.html","id":"install-development-version-from-github","dir":"","previous_headings":"Installation","what":"Install development version from GitHub","title":"Explore Brazilian Flora 2020 Database","text":"can install development version florabr GitHub : downloading data available Brazilian Flora 2020, need create folder save data: can now utilize get_florabr function retrieve recent version data: also option download older, specific version Brazilian Flora dataset. explore available versions, please refer link. downloading particular version, simply replace ‘latest’ desired version number. example:","code":"if(!require(devtools)){     install.packages(\"devtools\") }  if(!require(florabr)){ devtools::install_github('wevertonbio/florabr')}  library(florabr) #Creating a folder in a temporary directory #Replace 'file.path(tempdir(), \"florabr\")' by a path folder to be create in your computer my_dir <- file.path(file.path(tempdir(), \"florabr\")) dir.create(my_dir) get_florabr(output_dir = my_dir, #directory to save the data             data_version = \"latest\", #get the most recent version available             overwrite = T) #Overwrite data, if it exists get_florabr(output_dir = my_dir, #directory to save the data             data_version = \"393.385\", #Version 393.385, published on 2023-07-21             overwrite = T) #Overwrite data, if it exists"},{"path":"https://wevertonbio.github.io/florabr/index.html","id":"loading-data","dir":"","previous_headings":"","what":"Loading data","title":"Explore Brazilian Flora 2020 Database","text":"order use functions package, need load data environment. achieve , utilize load_florabr() function. default, function automatically search latest available version directory. However, option specify particular version using data_version parameter. Additionally, can choose two versions data: ‘short’ version (containing 19 columns required run functions package) ‘complete’ version (original 39 columns). function imports ‘short’ version default.","code":"#Load the short version bf <- load_florabr(data_dir = my_dir,                    data_version = \"Latest_available\",                    type = \"short\") #short"},{"path":"https://wevertonbio.github.io/florabr/index.html","id":"package-website","dir":"","previous_headings":"","what":"Package website","title":"Explore Brazilian Flora 2020 Database","text":"See package website (https://wevertonbio.github.io/florabr/) functions explanation vignettes.","code":""},{"path":"https://wevertonbio.github.io/florabr/reference/Attributes.html","id":null,"dir":"Reference","previous_headings":"","what":"Available attributes/parameters to filter and select species — Attributes","title":"Available attributes/parameters to filter and select species — Attributes","text":"list dataset containing available attributes filter select species. dataset used internally get_attributes","code":""},{"path":"https://wevertonbio.github.io/florabr/reference/Attributes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Available attributes/parameters to filter and select species — Attributes","text":"","code":"data(Attributes)"},{"path":"https://wevertonbio.github.io/florabr/reference/Attributes.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Available attributes/parameters to filter and select species — Attributes","text":"list 11 elements: States, Biome, vegetationType, lifeForm, habitat, nomenclaturalStatus, taxonomicStatus, Endemism, Origin, Group, Subgroup","code":""},{"path":"https://wevertonbio.github.io/florabr/reference/bf_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Brazilian Flora 2020 database - Version 393.387 — bf_data","title":"Brazilian Flora 2020 database - Version 393.387 — bf_data","text":"dataset containing subset Brazilian Flora database (version 393.387) @usage data(bf_data)","code":""},{"path":"https://wevertonbio.github.io/florabr/reference/bf_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Brazilian Flora 2020 database - Version 393.387 — bf_data","text":"","code":"bf_data"},{"path":"https://wevertonbio.github.io/florabr/reference/bf_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Brazilian Flora 2020 database - Version 393.387 — bf_data","text":"data.frame 110250 rows 18 variables: species Species names acceptedName Accepted name species (NA name species already accepted name) kingdom Kingdom species belongs (Plantae Fungi) Group Major group species belongs (Angiosperms, Gymnosperms, Ferns Lycophytes, Bryophytes, Algae) Subgroup Subgroup species belongs. available Bryophytes (Mosses, Hornworts, Liverworts) family Family species belongs genus Genus species belongs lifeForm Life form species (e.g: Tree, Herb, Shrub, etc.) habitat Habitat type species (e.g., Terrestrial, Rupicolous, Epiphytic, etc.) Biome Biomes confirmed occurrences species States Federal states confirmed occurrences species vegetationType Vegetation types confirmed occurrences species Origin Indicates whether species Native, Naturalized, Cultivated Brazil Endemism Indicates whether species Endemic Non-endemic Brazil taxonomicStatus Indicates level recognition acceptance species (Accepted Synonym) nomenclaturalStatus Indicates legitimacy validity species name (Correct, Illegitimate, Uncertain_Application, etc.) vernacularName Locally culturally used name species taxonRank Taxonomic rank (Species, Genus, Family, Order, etc). data contains Species","code":""},{"path":"https://wevertonbio.github.io/florabr/reference/biomes.html","id":null,"dir":"Reference","previous_headings":"","what":"SpatVector of the biomes of Brazil — biomes","title":"SpatVector of the biomes of Brazil — biomes","text":"simplified packed SpatVector polygons biomes present Brazilian territory. spatial data originally obtained geobr::read_biomes. Borders simplified removing vertices borders using terra::simplifyGeom. necessary unpack Spatvectos using terra::unwrap @usage data(biomes) biomes <- terra::unwrap(biomes)","code":""},{"path":"https://wevertonbio.github.io/florabr/reference/biomes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SpatVector of the biomes of Brazil — biomes","text":"","code":"biomes"},{"path":"https://wevertonbio.github.io/florabr/reference/biomes.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"SpatVector of the biomes of Brazil — biomes","text":"SpatVector 6 geometries 1 attribute: name_biome name biome (Amazon, Caatinga, Cerrado, Atlantic_Forest, Pampa, Pantanal)","code":""},{"path":"https://wevertonbio.github.io/florabr/reference/brazil.html","id":null,"dir":"Reference","previous_headings":"","what":"SpatVector of the Brazil's national borders — brazil","title":"SpatVector of the Brazil's national borders — brazil","text":"simplified packed SpatVector Brazil's national borders. spatial data originally obtained geobr::read_country. Borders simplified removing vertices borders using terra::simplifyGeom. necessary unpack Spatvectos using terra::unwrap @usage data(brazil) brazil <- terra::unwrap(brazil)","code":""},{"path":"https://wevertonbio.github.io/florabr/reference/brazil.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SpatVector of the Brazil's national borders — brazil","text":"","code":"brazil"},{"path":"https://wevertonbio.github.io/florabr/reference/brazil.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"SpatVector of the Brazil's national borders — brazil","text":"SpatVector 1 geometry 0 attribute","code":""},{"path":"https://wevertonbio.github.io/florabr/reference/check_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Check species names — check_names","title":"Check species names — check_names","text":"check_names checks species names correct searches suggestions name misspelled found Brazilian Flora 2020 database.","code":""},{"path":"https://wevertonbio.github.io/florabr/reference/check_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check species names — check_names","text":"","code":"check_names(data, species, max_distance = 0.1, Kingdom = \"Plantae\")"},{"path":"https://wevertonbio.github.io/florabr/reference/check_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check species names — check_names","text":"data (data.frame) data.frame imported load_florabr function. species (character) names species checked. max_distance (numeric) Maximum distance (fraction) allowed searching suggestions name misspelled. can value 0 1. higher value, suggestions returned. details, see agrep. Default = 0.1. Kingdom (character) kingdom species belong. can \"Plantae\" \"Fungi\". Default = \"Plantae\".","code":""},{"path":"https://wevertonbio.github.io/florabr/reference/check_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check species names — check_names","text":"data.frame following columns: input_name: species names informed species argument Spelling: indicates species name Correct (perfect match species name Brazilian Flora 2020), Probably_incorrect (partial match), Incorrect (match species). Suggested name: Spelling Correct, input_name. Spelling Probably_correct, one suggested names listed, found according maximum distance. Spelling Incorrect, value NA. Distance: integer Levenshtein edit distance. represents number single-character edits (insertions, deletions, substitutions) required transform input_name Suggested_name. taxonomicStatus: taxonomic status species name (\"Accepted\" \"Synonym\"). nomenclaturalStatus: nomenclatural status species name. information available species. acceptedName: species name accepted incorrect, accepted name specie. species name accepted correct, input_name Suggested_name. family: family specie.","code":""},{"path":"https://wevertonbio.github.io/florabr/reference/check_names.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Check species names — check_names","text":"Brazilian Flora 2020. Jardim Botânico Rio de Janeiro. Available : http://floradobrasil.jbrj.gov.br/","code":""},{"path":"https://wevertonbio.github.io/florabr/reference/check_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check species names — check_names","text":"","code":"data(\"bf_data\", package = \"florabr\") spp <- c(\"Butia cattarinensis\", \"Araucaria angustifolia\") check_names(data = bf_data, species = spp) #>               input_name           Spelling         Suggested_name Distance #> 1 Araucaria angustifolia            Correct Araucaria angustifolia        0 #> 2    Butia cattarinensis Probably_incorrect     Butia catarinensis        1 #>   taxonomicStatus nomenclaturalStatus           acceptedName        family #> 1        Accepted             Correct Araucaria angustifolia Araucariaceae #> 2        Accepted                <NA>     Butia catarinensis     Arecaceae"},{"path":"https://wevertonbio.github.io/florabr/reference/check_version.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if you have the latest version of Brazilian Flora data available — check_version","title":"Check if you have the latest version of Brazilian Flora data available — check_version","text":"function checks latest version Brazilian Flora data available specified directory.","code":""},{"path":"https://wevertonbio.github.io/florabr/reference/check_version.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if you have the latest version of Brazilian Flora data available — check_version","text":"","code":"check_version(data_dir)"},{"path":"https://wevertonbio.github.io/florabr/reference/check_version.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if you have the latest version of Brazilian Flora data available — check_version","text":"data_dir directory data located.","code":""},{"path":"https://wevertonbio.github.io/florabr/reference/check_version.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if you have the latest version of Brazilian Flora data available — check_version","text":"message informing whether latest version Brazilian Flora data available data_dir","code":""},{"path":"https://wevertonbio.github.io/florabr/reference/check_version.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if you have the latest version of Brazilian Flora data available — check_version","text":"","code":"#Check if there is a version of Brazilian Flora data available in the current #directory check_version(data_dir = getwd()) #> You do not have any version of Flora do Brazil 2020 in this directory. #>     The latest version is 393.399. Please, change the directory or #>     run the function get_florabr() to download the latest version of Brazilian #>     Flora 2020."},{"path":"https://wevertonbio.github.io/florabr/reference/filter_florabr.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify records outside natural ranges according to Brazilian Flora 2020 — filter_florabr","title":"Identify records outside natural ranges according to Brazilian Flora 2020 — filter_florabr","text":"function removes flags records outside species' natural ranges according information provided Brazilian Flora 2020 database.","code":""},{"path":"https://wevertonbio.github.io/florabr/reference/filter_florabr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify records outside natural ranges according to Brazilian Flora 2020 — filter_florabr","text":"","code":"filter_florabr(data, occ, Species = \"species\", Long = \"x\", Lat = \"y\",                       by_State = TRUE, buffer_State = 20, by_Biome = TRUE,                       buffer_Biome = 20, by_Endemism = TRUE,                       Buffer_Brazil = 20, State_vect = NULL,                       state_column = NULL, Biome_vect = NULL,                       biome_column = NULL, BR_vect = NULL,                       value = \"flag&clean\", keep_columns = TRUE,                       verbose = TRUE)"},{"path":"https://wevertonbio.github.io/florabr/reference/filter_florabr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify records outside natural ranges according to Brazilian Flora 2020 — filter_florabr","text":"data (data.frame) data.frame imported load_florabr function. occ (data.frame) data.frame records species. Species (character) column name occ species names. Default = \"species\" Long (character) column name occ longitude data. Default = \"x\" Lat (character) column name occ latitude data. Default = \"y\" by_State (logical) filter records state? Default = TRUE buffer_State (numeric) buffer (km) around polygons states occurrence specie. Default = 20. by_Biome (logical) filter records Biome? Default = TRUE buffer_Biome (numeric) buffer (km) around polygons biomes occurrence specie. Default = 20. by_Endemism (logical) filter records endemism? Default = TRUE Buffer_Brazil (numeric) buffer (km) around polygons Brazil. Default = 20. State_vect (SpatVector) SpatVector Brazilian states. default, uses SpatVector provided geobr::read_state(). can another Spatvector, structure must identical geobr::read_state(). state_column (character) name column State_vect containing state abbreviations. use Biome_vect null. Biome_vect (SpatVector) SpatVector Brazilian biomes. default, uses SpatVector provided geobr::read_biomes(). can another SpatVector, structure must identical geobr::read_biomes() biome names English. biome_column (character) name column Biome_vect containing names brazilian biomes (English: \"Amazon\", \"Atlantic_Forest\", \"Caatinga\", \"Cerrado\", \"Pampa\" \"Pantanal\". use Biome_vect null. BR_vect (SpatVector) SpatVector Brazil. default, uses SpatVector provided geobr::read_state() aggregated/dissolved, value (character) Defines output values. See Value section. Default = \"flag&clean\". keep_columns (logical) TRUE, keep original columns input occ. False, keep columns Species, Long Lat. Default = TRUE verbose (logical) Whether display species filtered function execution. Set TRUE enable display, FALSE run silently. Default = TRUE.","code":""},{"path":"https://wevertonbio.github.io/florabr/reference/filter_florabr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify records outside natural ranges according to Brazilian Flora 2020 — filter_florabr","text":"Depending 'value' argument. value = \"flag\", returns data.frame provided data additional columns indicating record falls inside natural range specie (TRUE) outside (FALSE). value = \"clean\", returns data.frame records passes tests (TRUE filters). value = \"flag&clean\" (Default), returns list two data.frames: one flagged records one cleaned records.","code":""},{"path":"https://wevertonbio.github.io/florabr/reference/filter_florabr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Identify records outside natural ranges according to Brazilian Flora 2020 — filter_florabr","text":"by_State = TRUE /by_Biome = TRUE, function takes polygons representing states /Biomes confirmed occurrences specie, draws buffer around polygons, tests records species fall inside . by_Endemism = TRUE, function checks species endemic Brazil. endemic, function tests records specie fall inside polygon representing boundaries Brazil (buffer).","code":""},{"path":"https://wevertonbio.github.io/florabr/reference/filter_florabr.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Identify records outside natural ranges according to Brazilian Flora 2020 — filter_florabr","text":"Brazilian Flora 2020. Jardim Botânico Rio de Janeiro. Available : http://floradobrasil.jbrj.gov.br/","code":""},{"path":"https://wevertonbio.github.io/florabr/reference/filter_florabr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identify records outside natural ranges according to Brazilian Flora 2020 — filter_florabr","text":"","code":"data(\"bf_data\") #Load Brazilian Flora data data(\"occurrences\") #Load occurrences pts <- subset(occurrences, species == \"Myrcia hatschbachii\") fd <- filter_florabr(data = bf_data, occ = pts,                     by_State = TRUE, buffer_State = 20,                     by_Biome = TRUE, buffer_Biome = 20,                     by_Endemism = TRUE, Buffer_Brazil = 20,                     State_vect = NULL,                     Biome_vect = NULL, BR_vect = NULL,                     value = \"flag&clean\", keep_columns = TRUE,                     verbose = FALSE)"},{"path":"https://wevertonbio.github.io/florabr/reference/get_attributes.html","id":null,"dir":"Reference","previous_headings":"","what":"Get available attributes to filter species — get_attributes","title":"Get available attributes to filter species — get_attributes","text":"function displays options available filter species characteristics","code":""},{"path":"https://wevertonbio.github.io/florabr/reference/get_attributes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get available attributes to filter species — get_attributes","text":"","code":"get_attributes(data, attribute, Kingdom = \"Plantae\")"},{"path":"https://wevertonbio.github.io/florabr/reference/get_attributes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get available attributes to filter species — get_attributes","text":"data (data.frame) data.frame imported load_florabr function data.frame generated select_species function. attribute (character) type characteristic. See detail see options. Kingdom (character) kingdom species belong. can \"Plantae\" \"Fungi\". Default = \"Plantae\".","code":""},{"path":"https://wevertonbio.github.io/florabr/reference/get_attributes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get available attributes to filter species — get_attributes","text":"data.frame two columns. first column provides available options English. Use options select_species function. second columns provides options Portuguese.","code":""},{"path":"https://wevertonbio.github.io/florabr/reference/get_attributes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get available attributes to filter species — get_attributes","text":"attribute argument accepts following options: Group, SubGroup, family, lifeForm, habitat, vegetationType, Origin, Endemism, Biome, States, taxonomicStatus nomenclaturalStatus\". options represent different characteristics species can used filtering.","code":""},{"path":"https://wevertonbio.github.io/florabr/reference/get_attributes.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get available attributes to filter species — get_attributes","text":"Brazilian Flora 2020. Jardim Botânico Rio de Janeiro. Available : http://floradobrasil.jbrj.gov.br/","code":""},{"path":"https://wevertonbio.github.io/florabr/reference/get_attributes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get available attributes to filter species — get_attributes","text":"","code":"data(\"bf_data\") #Load Brazilian Flora data # Get available biomes to filter species get_attributes(data = bf_data, Kingdom = \"Plantae\", attribute = \"Biome\") #>                 Biome                Bioma #> 1              Amazon             Amazonia #> 2     Atlantic_Forest       Mata_Atlantica #> 3            Caatinga             Caatinga #> 4             Cerrado              Cerrado #> 5               Pampa                Pampa #> 6            Pantanal             Pantanal #> 7 Not_found_in_Brazil Nao_ocorre_no_Brasil # Get available life forms to filter species get_attributes(data = bf_data, Kingdom = \"Plantae\", attribute = \"lifeForm\") #>               lifeForm            Forma_de_vida #> 1      Aquatic-Benthos          Aquatica-Bentos #> 2      Aquatic-Neuston         Aquatica-Neuston #> 3     Aquatic-Plankton        Aquatica-Plancton #> 4                Shrub                  Arbusto #> 5                 Tree                   Arvore #> 6               Bamboo                    Bambu #> 7              Cushion                    Coxim #> 8             Dendroid                Dendroide #> 9              Unknown             Desconhecida #> 10          Dracaenoid               Dracenoide #> 13                Herb                     Erva #> 14          Flabellate                Flabelado #> 15             Foliose                  Folhosa #> 16 Liana/scandent/vine Liana/voluvel/trepadeira #> 19           Palm_tree                 Palmeira #> 21             Pendent                 Pendente #> 23            Subshrub               Subarbusto #> 24           Succulent                Suculenta #> 25            Thallose                   Talosa #> 26                 Mat                   Tapete #> 27                Weft                    Trama #> 28                Tuft                     Tufo # Get available states to filter species get_attributes(data = bf_data, Kingdom = \"Plantae\", attribute = \"States\") #>    Sigla_Acronym           Nome_Name #> 1             AC                Acre #> 2             AM            Amazonas #> 3             PA                Para #> 4             BA               Bahia #> 5             ES      Espirito Santo #> 6             RJ      Rio de Janeiro #> 7             MT         Mato Grosso #> 8             MA            Maranhao #> 9             CE               Ceara #> 10            MG        Minas Gerais #> 11            PE          Pernambuco #> 12            PI               Piaui #> 13            SE             Sergipe #> 14            MS  Mato Grosso do Sul #> 15            PR              Parana #> 16            RS   Rio Grande do Sul #> 17            SC      Santa Catarina #> 18            SP           Sao Paulo #> 19            AL             Alagoas #> 20            DF    Distrito Federal #> 21            GO               Goias #> 22            RO            Rondania #> 23            AP               Amapa #> 24            PB             Paraiba #> 25            RN Rio Grande do Norte #> 26            RR             Roraima #> 27            TO           Tocantins"},{"path":"https://wevertonbio.github.io/florabr/reference/get_binomial.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the binomial name (Genus + specific epithet) from a Scientific Name — get_binomial","title":"Extract the binomial name (Genus + specific epithet) from a Scientific Name — get_binomial","text":"Extract binomial name (Genus + specific epithet) Scientific Name","code":""},{"path":"https://wevertonbio.github.io/florabr/reference/get_binomial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the binomial name (Genus + specific epithet) from a Scientific Name — get_binomial","text":"","code":"get_binomial(species_names)"},{"path":"https://wevertonbio.github.io/florabr/reference/get_binomial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the binomial name (Genus + specific epithet) from a Scientific Name — get_binomial","text":"species_names (character) Scientific names converted binomial names","code":""},{"path":"https://wevertonbio.github.io/florabr/reference/get_binomial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the binomial name (Genus + specific epithet) from a Scientific Name — get_binomial","text":"vector binomial names (Genus + specific epithet).","code":""},{"path":"https://wevertonbio.github.io/florabr/reference/get_binomial.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract the binomial name (Genus + specific epithet) from a Scientific Name — get_binomial","text":"","code":"spp <- c(\"Araucaria angustifolia (Bertol.) Kuntze\", \"Butia catarinensis Noblick & Lorenzi\", \"Adesmia paranensis Burkart\") spp_new <- get_binomial(species_names = spp) spp_new #> [1] \"Araucaria angustifolia\" \"Butia catarinensis\"     \"Adesmia paranensis\""},{"path":"https://wevertonbio.github.io/florabr/reference/get_florabr.html","id":null,"dir":"Reference","previous_headings":"","what":"Download the latest version of Brazilian Flora 2020 database — get_florabr","title":"Download the latest version of Brazilian Flora 2020 database — get_florabr","text":"function downloads latest older version Brazilian Flora 2020 database, merges information single data.frame, saves data.frame specified directory.","code":""},{"path":"https://wevertonbio.github.io/florabr/reference/get_florabr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download the latest version of Brazilian Flora 2020 database — get_florabr","text":"","code":"get_florabr(output_dir, data_version = \"latest\",                  solve_incongruences = TRUE, overwrite = TRUE,                  verbose = TRUE)"},{"path":"https://wevertonbio.github.io/florabr/reference/get_florabr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download the latest version of Brazilian Flora 2020 database — get_florabr","text":"output_dir (character) directory save data downloaded Brazilian Flora 2020 data_version (character) Version Brazilian Flora database download. Use \"latest\" get recent version, updated weekly. Alternatively, specify older version (e.g., data_version = \"393.319\"). Default value \"latest\". solve_incongruences Resolve inconsistencies species subspecies/varieties  information. set TRUE (default), species information updated based unique data varieties subspecies. example, subspecies occurs certain biome, implies species also occurs biome. overwrite (logical) TRUE, data overwritten. Default = TRUE. verbose (logical) Whether display messages function execution. Set TRUE enable display, FALSE run silently. Default = TRUE.","code":""},{"path":"https://wevertonbio.github.io/florabr/reference/get_florabr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download the latest version of Brazilian Flora 2020 database — get_florabr","text":"function downloads latest version Brazilian Flora 2020 database official source. merges information single data.frame, containing details species, taxonomy, occurrence, relevant data. merged data.frame saved file specified output directory. data saved format allows easy loading using load_florabr function analysis R.","code":""},{"path":"https://wevertonbio.github.io/florabr/reference/get_florabr.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Download the latest version of Brazilian Flora 2020 database — get_florabr","text":"Brazilian Flora 2020. Jardim Botânico Rio de Janeiro. Available : http://floradobrasil.jbrj.gov.br/","code":""},{"path":"https://wevertonbio.github.io/florabr/reference/get_florabr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download the latest version of Brazilian Flora 2020 database — get_florabr","text":"","code":"if(interactive()){ #Creating a folder in a temporary directory #Replace 'file.path(tempdir(), \"florabr\")' by a path folder to be create in #your computer my_dir <- file.path(file.path(tempdir(), \"florabr\")) dir.create(my_dir) #Download, merge and save data get_florabr(output_dir = my_dir, data_version = \"latest\",             solve_incongruences = TRUE, overwrite = TRUE, verbose = TRUE) }"},{"path":"https://wevertonbio.github.io/florabr/reference/get_spat_occ.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Spatial polygons (SpatVectors) of species based on its distribution\n(States and Biomes) according to Brazilian Flora 2020 — get_spat_occ","title":"Get Spatial polygons (SpatVectors) of species based on its distribution\n(States and Biomes) according to Brazilian Flora 2020 — get_spat_occ","text":"Get Spatial polygons (SpatVectors) species based distribution (States Biomes) according Brazilian Flora 2020","code":""},{"path":"https://wevertonbio.github.io/florabr/reference/get_spat_occ.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Spatial polygons (SpatVectors) of species based on its distribution\n(States and Biomes) according to Brazilian Flora 2020 — get_spat_occ","text":"","code":"get_spat_occ(   data,   species,   State = TRUE,   Biome = TRUE,   intersection = TRUE,   State_vect = NULL,   state_column = NULL,   Biome_vect = NULL,   biome_column = NULL,   verbose = TRUE )"},{"path":"https://wevertonbio.github.io/florabr/reference/get_spat_occ.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Spatial polygons (SpatVectors) of species based on its distribution\n(States and Biomes) according to Brazilian Flora 2020 — get_spat_occ","text":"data (data.frame) data.frame imported load_florabr function. species (character) one species names (genus specific epithet, eg. \"Araucaria angustifolia\") State (logical) get SpatVector states occurrence species? Default = TRUE Biome (logical) get SpatVector biomes occurrence species? Default = TRUE intersection (character) get Spatvector representing intersection States Biomes occurrence specie? use intersection = TRUE, must define State = TRUE Biome = TRUE\". Default = TRUE State_vect (SpatVector) SpatVector Brazilian states. default, uses SpatVector provided geobr::read_state(). can another Spatvector, structure must identical geobr::read_state(). state_column (character) name column State_vect containing state abbreviations. use Biome_vect null. Biome_vect (SpatVector) SpatVector Brazilian biomes. default, uses SpatVector provided geobr::read_biomes(). can another SpatVector, structure must identical geobr::read_biomes(). biome_column (character) name column Biome_vect containing names brazilian biomes (English: \"Amazon\", \"Atlantic_Forest\", \"Caatinga\", \"Cerrado\", \"Pampa\" \"Pantanal\". use Biome_vect null. verbose (logical) Whether display species filtered function execution. Set TRUE enable display, FALSE run silently. Default = TRUE.","code":""},{"path":"https://wevertonbio.github.io/florabr/reference/get_spat_occ.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Spatial polygons (SpatVectors) of species based on its distribution\n(States and Biomes) according to Brazilian Flora 2020 — get_spat_occ","text":"list SpatVectors States /Biomes /Intersections specie.","code":""},{"path":"https://wevertonbio.github.io/florabr/reference/get_spat_occ.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get Spatial polygons (SpatVectors) of species based on its distribution\n(States and Biomes) according to Brazilian Flora 2020 — get_spat_occ","text":"Brazilian Flora 2020. Jardim Botânico Rio de Janeiro. Available : http://floradobrasil.jbrj.gov.br/","code":""},{"path":"https://wevertonbio.github.io/florabr/reference/get_spat_occ.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Spatial polygons (SpatVectors) of species based on its distribution\n(States and Biomes) according to Brazilian Flora 2020 — get_spat_occ","text":"","code":"library(terra) #> terra 1.7.71 data(\"bf_data\") #Load Brazilian Flora data spp <- c(\"Araucaria angustifolia\", \"Adesmia paranensis\") #Example species #Get states, biomes and intersection states-biomes of species spp_spt <- get_spat_occ(data = bf_data, species = spp, State = TRUE,                        Biome = TRUE, intersection = TRUE, State_vect = NULL,                        Biome_vect = NULL, verbose = TRUE) #> Getting states ofAraucaria angustifolia #> Getting biomes ofAraucaria angustifolia #> Getting biomes ofAraucaria angustifolia #> Getting states ofAdesmia paranensis #> Getting biomes ofAdesmia paranensis #> Getting biomes ofAdesmia paranensis   #Plot states of occurrence of Araucaria angustifolia plot(spp_spt[[1]]$States, main = names(spp_spt)[[1]])  #Plot biomes of occurrence of Araucaria angustifolia plot(spp_spt[[2]]$Biomes, main = names(spp_spt)[[2]])  #Plot intersection between states and biomes of occurrence of #Araucaria angustifolia plot(spp_spt[[1]]$States_Biomes)"},{"path":"https://wevertonbio.github.io/florabr/reference/load_florabr.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Brazilian Flora database — load_florabr","title":"Load Brazilian Flora database — load_florabr","text":"Load Brazilian Flora database","code":""},{"path":"https://wevertonbio.github.io/florabr/reference/load_florabr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Brazilian Flora database — load_florabr","text":"","code":"load_florabr(data_dir, data_version = \"Latest_available\",                     type = \"short\", verbose = TRUE)"},{"path":"https://wevertonbio.github.io/florabr/reference/load_florabr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load Brazilian Flora database — load_florabr","text":"data_dir (character) directory used save data downloaded Brazilian Flora 2020 using get_florabr function. data_version (character) version Brazilian Flora database loaded. can \"Latest_available\", load latest version available; another specified version, example \"393.364\". Default = \"Latest_available\". type (character) determines number columns loaded. can \"short\" \"complete\". Default = \"short\". See details. verbose (logical) Whether display messages function execution. Set TRUE enable display, FALSE run silently. Default = TRUE.","code":""},{"path":"https://wevertonbio.github.io/florabr/reference/load_florabr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load Brazilian Flora database — load_florabr","text":"data.frame specified version (Default latest available) Brazilian Flora database. data.frame necessary run functions package.","code":""},{"path":"https://wevertonbio.github.io/florabr/reference/load_florabr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Load Brazilian Flora database — load_florabr","text":"parameter type accepts two arguments. type = short, load data.frame 19 columns needed run functions package: species, scientificName, acceptedName, kingdom, Group, Subgroup, family, genus, lifeForm, habitat, Biome, States, vegetationType, Origin, Endemism, taxonomicStatus, nomenclaturalStatus, vernacularName, taxonRank. type = complete, load data.frame 39 variables available Brazilian Flora database.","code":""},{"path":"https://wevertonbio.github.io/florabr/reference/load_florabr.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Load Brazilian Flora database — load_florabr","text":"Brazilian Flora 2020. Jardim Botânico Rio de Janeiro. Available : http://floradobrasil.jbrj.gov.br/","code":""},{"path":"https://wevertonbio.github.io/florabr/reference/load_florabr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load Brazilian Flora database — load_florabr","text":"","code":"# \\donttest{ #Creating a folder in a temporary directory #Replace 'file.path(tempdir(), \"florabr\")' by a path folder to be create in #your computer my_dir <- file.path(file.path(tempdir(), \"florabr\")) dir.create(my_dir) #Download, merge and save data get_florabr(output_dir = my_dir, data_version = \"latest\", overwrite = TRUE,             verbose = TRUE) #> Data will be saved in/tmp/RtmpmE6la4/florabr #> Downloading version:393.399 #> Merging data. Please wait a moment... #> Data will be saved in /tmp/RtmpmE6la4/florabr #> Data downloaded and merged successfully. Final data saved in/tmp/RtmpmE6la4/florabr/393.399/CompleteBrazilianFlora.rds #Load data df <- load_florabr(data_dir = my_dir, data_version = \"Latest_available\", type = \"short\") #> Loading version393.399 # }"},{"path":"https://wevertonbio.github.io/florabr/reference/occurrences.html","id":null,"dir":"Reference","previous_headings":"","what":"Records of plant species — occurrences","title":"Records of plant species — occurrences","text":"dataset containing records 7 plant species downloaded GBIF. records obtained plantR::rgbif2","code":""},{"path":"https://wevertonbio.github.io/florabr/reference/occurrences.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Records of plant species — occurrences","text":"","code":"data(occurrences)"},{"path":"https://wevertonbio.github.io/florabr/reference/occurrences.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Records of plant species — occurrences","text":"data.frame 1521 rows 3 variables: species Species names (Araucaria angustifolia, Abatia americana, Passiflora edmundoi, Myrcia hatschbachii, Serjania pernambucensis, Inga virescens, Solanum restingae) x Longitude y Latitude","code":""},{"path":"https://wevertonbio.github.io/florabr/reference/select_by_vernacular.html","id":null,"dir":"Reference","previous_headings":"","what":"Search for taxa using vernacular names — select_by_vernacular","title":"Search for taxa using vernacular names — select_by_vernacular","text":"Search taxa using vernacular names","code":""},{"path":"https://wevertonbio.github.io/florabr/reference/select_by_vernacular.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search for taxa using vernacular names — select_by_vernacular","text":"","code":"select_by_vernacular(data, names, exact = FALSE)"},{"path":"https://wevertonbio.github.io/florabr/reference/select_by_vernacular.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search for taxa using vernacular names — select_by_vernacular","text":"data (data.frame) data.frame imported load_florabr function generated function select_species. names (character) vernacular name (\"Nome comum\") species searched exact (logic) TRUE, function search exact matches. example, names = \"pinheiro\" exact = TRUE, function return species popularly known \"pinheiro\". hand, names = \"pinheiro\" exact = FALSE, function return results \"pinheiro--parana\". Default = FALSE","code":""},{"path":"https://wevertonbio.github.io/florabr/reference/select_by_vernacular.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search for taxa using vernacular names — select_by_vernacular","text":"data.frame species vernacular names match input names","code":""},{"path":"https://wevertonbio.github.io/florabr/reference/select_by_vernacular.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Search for taxa using vernacular names — select_by_vernacular","text":"Brazilian Flora 2020. Jardim Botânico Rio de Janeiro. Available : http://floradobrasil.jbrj.gov.br/ Brazilian Flora 2020. Jardim Botânico Rio de Janeiro. Available : http://floradobrasil.jbrj.gov.br/","code":""},{"path":"https://wevertonbio.github.io/florabr/reference/select_by_vernacular.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search for taxa using vernacular names — select_by_vernacular","text":"","code":"data(\"bf_data\") #Load Brazilian Flora data #Search for species whose vernacular name is 'pinheiro' pinheiro_exact <- select_by_vernacular(data = bf_data,                                        names = \"pinheiro\",                                        exact = TRUE) pinheiro_exact #>                     species #> 134008 Araucaria columnaris #> 140668    Pinus canariensis #> 140670      Pinus banksiana #> 140684      Pinus palustris #> 140692          Pinus nigra #> 140718       Pinus echinata #> 140730     Pinus densiflora #> 140814    Pinus tecunumanii #> 140819     Pinus thunbergii #>                                               scientificName acceptedName #> 134008               Araucaria columnaris (J.R.Forst.) Hook.         <NA> #> 140668                               Pinus canariensis C.Sm.         <NA> #> 140670                                 Pinus banksiana Lamb.         <NA> #> 140684                                 Pinus palustris Mill.         <NA> #> 140692                                Pinus nigra J.F.Arnold         <NA> #> 140718                                  Pinus echinata Mill.         <NA> #> 140730                      Pinus densiflora Siebold & Zucc.         <NA> #> 140814 Pinus tecunumanii F.Schwerdtf. ex Eguiluz & J.P.Perry         <NA> #> 140819                                Pinus thunbergii Parl.         <NA> #>        kingdom       Group Subgroup        family     genus lifeForm #> 134008 Plantae Gymnosperms     <NA> Araucariaceae Araucaria     Tree #> 140668 Plantae Gymnosperms     <NA>      Pinaceae     Pinus     Tree #> 140670 Plantae Gymnosperms     <NA>      Pinaceae     Pinus     Tree #> 140684 Plantae Gymnosperms     <NA>      Pinaceae     Pinus     Tree #> 140692 Plantae Gymnosperms     <NA>      Pinaceae     Pinus     Tree #> 140718 Plantae Gymnosperms     <NA>      Pinaceae     Pinus     Tree #> 140730 Plantae Gymnosperms     <NA>      Pinaceae     Pinus     Tree #> 140814 Plantae Gymnosperms     <NA>      Pinaceae     Pinus     Tree #> 140819 Plantae Gymnosperms     <NA>      Pinaceae     Pinus     Tree #>            habitat Biome                  States vegetationType      Origin #> 134008 Terrestrial       MG;PB;PE;PR;RS;SC;SE;SP Anthropic_Area  Cultivated #> 140668 Terrestrial                   MG;RJ;RS;SP Anthropic_Area  Cultivated #> 140670 Terrestrial                            RS Anthropic_Area  Cultivated #> 140684 Terrestrial                   PR;RS;SC;SP Anthropic_Area  Cultivated #> 140692 Terrestrial                         RS;SP Anthropic_Area  Cultivated #> 140718 Terrestrial                      PR;RS;SP Anthropic_Area  Cultivated #> 140730 Terrestrial                            MG Anthropic_Area  Cultivated #> 140814 Terrestrial                            SP Anthropic_Area Naturalized #> 140819 Terrestrial                         PR;SP Anthropic_Area  Cultivated #>           Endemism taxonomicStatus nomenclaturalStatus #> 134008 Non-endemic        Accepted             Correct #> 140668 Non-endemic        Accepted                <NA> #> 140670 Non-endemic        Accepted                <NA> #> 140684 Non-endemic        Accepted                <NA> #> 140692 Non-endemic        Accepted                <NA> #> 140718 Non-endemic        Accepted                <NA> #> 140730 Non-endemic        Accepted                <NA> #> 140814 Non-endemic        Accepted                <NA> #> 140819 Non-endemic        Accepted                <NA> #>                                                                                                                                                     vernacularName #> 134008                                                        pinheiro, pinheiro-de-natal, pinheiro-alemao, pinheiro-de-cook, araucaria-colunar, araucaria-excelsa #> 140668                                                                                                                             pinheiro-das-canarias, pinheiro #> 140670                                                                                                                                  pinus, pinheiro, jack-pine #> 140684                          pinheiro, pinheiro-de-folha-longa, pinheiro-da-florida, pinheiro-amarelo, pinheiro-breu, pinheiro-da-georgia, pinheiro-terebintina #> 140692                                                                                                                                     pinheiro, austrian-pine #> 140718 pinheiro-de-folha-curta, pinheiro-da-carolina-do-norte, pinheiro-pobre, pinheiro-amarelo-de-folha-curta, pinheiro-amarelo, pinus, pinheiro, short-leaf-pine #> 140730                                                                                                                                 pinheiro, japanese-red-pine #> 140814                                                                                                                                             pinus, pinheiro #> 140819                                                                                                                                             pinus, pinheiro #>        taxonRank #> 134008   Species #> 140668   Species #> 140670   Species #> 140684   Species #> 140692   Species #> 140718   Species #> 140730   Species #> 140814   Species #> 140819   Species #Search for species whose vernacular name is 'pinheiro', allowing non-exact #matches pinheiro_not_exact <- select_by_vernacular(data = bf_data,                                           names = \"pinheiro\",                                           exact = FALSE) head(pinheiro_not_exact) #>                         species                              scientificName #> 26790    Araucaria angustifolia     Araucaria angustifolia (Bertol.) Kuntze #> 123434     Cryptomeria japonica Cryptomeria japonica (Thunb. ex L.f.) D.Don #> 123566       Taxodium distichum               Taxodium distichum (L.) Rich. #> 133878  Cunninghamia lanceolata       Cunninghamia lanceolata (Lamb.) Hook. #> 134008     Araucaria columnaris     Araucaria columnaris (J.R.Forst.) Hook. #> 134501 Chamaecyparis lawsoniana   Chamaecyparis lawsoniana (A.Murray) Parl. #>        acceptedName kingdom       Group Subgroup        family         genus #> 26790          <NA> Plantae Gymnosperms     <NA> Araucariaceae     Araucaria #> 123434         <NA> Plantae Gymnosperms     <NA>  Cupressaceae   Cryptomeria #> 123566         <NA> Plantae Gymnosperms     <NA>  Cupressaceae      Taxodium #> 133878         <NA> Plantae Gymnosperms     <NA>  Cupressaceae  Cunninghamia #> 134008         <NA> Plantae Gymnosperms     <NA> Araucariaceae     Araucaria #> 134501         <NA> Plantae Gymnosperms     <NA>  Cupressaceae Chamaecyparis #>        lifeForm     habitat                 Biome                     States #> 26790      Tree Terrestrial Atlantic_Forest;Pampa          MG;PR;RJ;RS;SC;SP #> 123434     Tree Terrestrial                       DF;ES;MG;PA;PR;RJ;RS;SC;SP #> 123566     Tree Terrestrial                                MG;PR;RJ;RS;SC;SP #> 133878     Tree Terrestrial                                MG;PR;RJ;RS;SC;SP #> 134008     Tree Terrestrial                          MG;PB;PE;PR;RS;SC;SE;SP #> 134501     Tree Terrestrial                                      PR;RJ;RS;SP #>                                                                            vegetationType #> 26790  High_Altitude_Grassland;Mixed_Ombrophyllous_Forest;Seasonally_Semideciduous_Forest #> 123434                                                                     Anthropic_Area #> 123566                                                                     Anthropic_Area #> 133878                                                                     Anthropic_Area #> 134008                                                                     Anthropic_Area #> 134501                                                                     Anthropic_Area #>            Origin    Endemism taxonomicStatus nomenclaturalStatus #> 26790      Native Non-endemic        Accepted             Correct #> 123434 Cultivated Non-endemic        Accepted             Correct #> 123566 Cultivated Non-endemic        Accepted             Correct #> 133878 Cultivated Non-endemic        Accepted             Correct #> 134008 Cultivated Non-endemic        Accepted             Correct #> 134501 Cultivated Non-endemic        Accepted                <NA> #>                                                                                                                                                                                                vernacularName #> 26790                                                                                                                               araucaria, pinheiro-do-parana, curi, pinheiro-brasileiro, pinho-do-parana #> 123434                                                                                                cedro-japones, pinheiro-do-japao, araucaria-do-japao, arvore-de-natal, japanese-cedar, cedrinho-japones #> 123566 cipreste-calvo, cipreste-deciduo, cipreste-do-brejo, pinheiro-do-brejo, cipreste-vermelho, swamp-cypress, louisiana-cypress, marsh-cypress, cispreste-da-luisiana, bald-cypress, cipreste-dos-pantanos #> 133878                                                                                                             cuningamia, cunninghamia, pinhao-chines, pinheiro-alemao, pinheiro-chines, arvore-do-natal #> 134008                                                                                                   pinheiro, pinheiro-de-natal, pinheiro-alemao, pinheiro-de-cook, araucaria-colunar, araucaria-excelsa #> 134501                                     cedro-de-oregon, cerdo-branco, tuia, falso-cipreste, pinheiro-prateado, cipreste-de-lawson, cipreste-nevado, cipreste, alumi, cipreste-alumi, cipreste-escaravelho #>        taxonRank #> 26790    Species #> 123434   Species #> 123566   Species #> 133878   Species #> 134008   Species #> 134501   Species"},{"path":"https://wevertonbio.github.io/florabr/reference/select_species.html","id":null,"dir":"Reference","previous_headings":"","what":"Selection of species based on its characteristics and distribution — select_species","title":"Selection of species based on its characteristics and distribution — select_species","text":"select_species allows filter species based characteristics distribution available Brazilian Flora 2020","code":""},{"path":"https://wevertonbio.github.io/florabr/reference/select_species.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Selection of species based on its characteristics and distribution — select_species","text":"","code":"select_species(data,                       include_subspecies = FALSE, include_variety = FALSE,                       Kingdom = \"Plantae\", Group = \"All\", Subgroup = \"All\",                       Family = \"All\", Genus = \"All\",                       LifeForm = \"All\", filter_LifeForm = \"in\",                       Habitat = \"All\", filter_Habitat = \"in\",                       Biome = \"All\", filter_Biome = \"in\",                       State = \"All\", filter_State = \"in\",                       VegetationType = \"All\", filter_Vegetation = \"in\",                       Endemism = \"All\", Origin = \"All\",                       TaxonomicStatus = \"Accepted\",                       NomenclaturalStatus = \"All\")"},{"path":"https://wevertonbio.github.io/florabr/reference/select_species.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Selection of species based on its characteristics and distribution — select_species","text":"data (data.frame) data.frame imported load_florabr function. include_subspecies (logical) include subspecies? Default = FALSE include_variety (logical) include varieties species? Default = FALSE Kingdom (character) Kingdom filtering dataset. can \"Plantae\" \"Fungi\". Default = \"Plantae\". include , use c(\"Plantae\", \"Fungi\") Group (character) groups filtering datasets. can \"Fungi\", \"Angiosperms\", \"Gymnosperms\", \"Ferns Lycophytes\", \"Bryophytes\" \"Algae\". use one group, put available items vector, example: Group = c(Angiosperms\", \"Gymnosperms\"). Default = \"\". Subgroup (character) subgroups filtering dataset. available Group \"Fungi\" \"Bryophytes\". Fungi, can \"stricto sensu\" \"lato sensu\". Bryophytes, can \"Mosses\", \"Hornworts\" \"Liverworts\" . use one group, put available items vector, example: Subgroup = c(\"Mosses\", \"Hornworts\"). Default = \"\". Family (character) families filtering dataset. can included one Family. Default = \"\". Genus (character) genus filtering dataset. can included one Genus. Default = \"\". LifeForm (character) life forms filtering dataset. can included one LifeForm. Default = \"\" filter_LifeForm (character) type filtering life forms. can \"\", \"\", \"not_in\" \"\". See details argument. Habitat (character) life habitat filtering dataset. can included one habitat. Default = \"\" filter_Habitat (character) type filtering habitat. can \"\", \"\", \"not_in\" \"\". See details argument. Biome (character) biomes filtering dataset. can included one biome. Default = \"\" filter_Biome (character) type filtering biome. can \"\", \"\", \"not_in\" \"\". See details argument. State (character) States filtering dataset. can included one state. Default = \"\". filter_State (character) type filtering state. can \"\", \"\", \"not_in\" \"\". See Details argument. VegetationType (character) vegetation types filtering dataset. can included one vegetation type. Default = \"\". filter_Vegetation (character) type filtering vegetation type. can \"\", \"\", \"not_in\" \"\". See details argument. Endemism (character) endemism (endemic non-endemic Brazil) filtering dataset. can \"\", \"Endemic\" \"Non-endemic\". Default = \"\". Origin (character) origin filtering dataset. can \"\", \"Native\", \"Cultivated\" \"Naturalized\". Default = \"\". TaxonomicStatus (character) taxonomic status filtering dataset. can \"\", \"Accepted\" \"Synonym\". Default = \"Accepted\". NomenclaturalStatus (character) nomenclatural status filtering dataset. Default = \"Accepted\"","code":""},{"path":"https://wevertonbio.github.io/florabr/reference/select_species.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Selection of species based on its characteristics and distribution — select_species","text":"new dataframe filtered species.","code":""},{"path":"https://wevertonbio.github.io/florabr/reference/select_species.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Selection of species based on its characteristics and distribution — select_species","text":"possible choose 4 ways filter lifeform, habitat, biome, state vegetation type: \"\": selects species occurrence determined values. allows multiple matches. example, Biome = c(\"Amazon\", Cerrado\" filter_Biome = \"\", select species occur Amazon Cerrado, may also occur biomes. \"\": selects species occurrence determined values. allows single matches. example, Biome = c(\"Amazon\", \"Cerrado\") filter_Biome = \"\", select species occur exclusively Amazon Cerrado biomes, without occurrences biomes. \"not_in\": selects species occurrence determined values. allows single multiple matches. example, Biome = c(\"Amazon\", \"Cerrado\") filter_Biome = \"not_in\", select species without occurrences Amazon Cerrado biomes. \"\": selects species occurrence determined values. allows single multiple matches. example, Biome = c(\"Amazon\", \"Cerrado\") filter_Biome = \"\", select species occurs Amazon Cerrado biomes, including species occurs biomes . get complete list arguments available Family, Genus, LifeForm, Habitat, Biome, State, NomenclaturalStatus, use function get_attributes","code":""},{"path":"https://wevertonbio.github.io/florabr/reference/select_species.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Selection of species based on its characteristics and distribution — select_species","text":"Brazilian Flora 2020. Jardim Botânico Rio de Janeiro. Available : http://floradobrasil.jbrj.gov.br/","code":""},{"path":"https://wevertonbio.github.io/florabr/reference/select_species.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Selection of species based on its characteristics and distribution — select_species","text":"","code":"data(\"bf_data\") #Load Brazilian Flora data #'Select endemic and native species of trees with disjunct occurrence in # Atlantic Forest and Amazon am_af_only <- select_species(data = bf_data,                              include_subspecies = FALSE,                              include_variety = FALSE,                              Kingdom = \"Plantae\",                              Group = \"All\", Subgroup = \"All\",                              Family = \"All\", Genus = \"All\",                              LifeForm = \"Tree\", filter_LifeForm = \"only\",                              Habitat = \"All\", filter_Habitat = \"in\",                              Biome = c(\"Atlantic_Forest\",\"Amazon\"),                              filter_Biome = \"only\",                              State = \"All\", filter_State = \"and\",                              VegetationType = \"All\",                              filter_Vegetation = \"in\",                              Endemism = \"Endemic\", Origin = \"Native\",                              TaxonomicStatus = \"All\",                              NomenclaturalStatus = \"All\")"},{"path":"https://wevertonbio.github.io/florabr/reference/states.html","id":null,"dir":"Reference","previous_headings":"","what":"SpatVector of the federal states of Brazil — states","title":"SpatVector of the federal states of Brazil — states","text":"simplified packed SpatVector polygons federal states Brazil. spatial data originally obtained geobr::read_state. Borders simplified removing vertices borders using terra::simplifyGeom. necessary unpack Spatvectos using terra::unwrap @usage data(states) states <- terra::unwrap(states)","code":""},{"path":"https://wevertonbio.github.io/florabr/reference/states.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SpatVector of the federal states of Brazil — states","text":"","code":"states"},{"path":"https://wevertonbio.github.io/florabr/reference/states.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"SpatVector of the federal states of Brazil — states","text":"SpatVector 27 geometries 3 attributes: abbrev_state State acronym name_state State's full name name_region region state belongs","code":""},{"path":"https://wevertonbio.github.io/florabr/reference/subset_species.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract a subset of species from Brazilian Flora 2020 database — subset_species","title":"Extract a subset of species from Brazilian Flora 2020 database — subset_species","text":"Returns data.frame subset species Brazilian Flora 2020 database","code":""},{"path":"https://wevertonbio.github.io/florabr/reference/subset_species.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract a subset of species from Brazilian Flora 2020 database — subset_species","text":"","code":"subset_species(data, species,                       include_subspecies = FALSE,                       include_variety = FALSE,                       Kingdom = \"Plantae\")"},{"path":"https://wevertonbio.github.io/florabr/reference/subset_species.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract a subset of species from Brazilian Flora 2020 database — subset_species","text":"data (data.frame) data.frame imported load_florabr function. species (character) names species extracted Brazilian Flora database. include_subspecies (logical) include subspecies? Default = FALSE include_variety (logical) include varieties species? Default = FALSE Kingdom (character) Kingdom filtering dataset. can \"Plantae\" \"Fungi\". Default = \"Plantae\". include , use c(\"Plantae\", \"Fungi\")","code":""},{"path":"https://wevertonbio.github.io/florabr/reference/subset_species.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract a subset of species from Brazilian Flora 2020 database — subset_species","text":"data.frame selected species.","code":""},{"path":"https://wevertonbio.github.io/florabr/reference/subset_species.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Extract a subset of species from Brazilian Flora 2020 database — subset_species","text":"Brazilian Flora 2020. Jardim Botânico Rio de Janeiro. Available : http://floradobrasil.jbrj.gov.br/","code":""},{"path":"https://wevertonbio.github.io/florabr/reference/subset_species.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract a subset of species from Brazilian Flora 2020 database — subset_species","text":"","code":"data(\"bf_data\") #Load Brazilian Flora data #Species to extract from database spp <- c(\"Araucaria angustifolia\", \"Adesmia paranensis\") spp_bf <- subset_species(data = bf_data, species = spp,                       include_subspecies = FALSE,                       include_variety = FALSE) spp_bf #>                      species                          scientificName #> 26790 Araucaria angustifolia Araucaria angustifolia (Bertol.) Kuntze #> 82029     Adesmia paranensis              Adesmia paranensis Burkart #>       acceptedName kingdom       Group Subgroup        family     genus #> 26790         <NA> Plantae Gymnosperms     <NA> Araucariaceae Araucaria #> 82029         <NA> Plantae Angiosperms     <NA>      Fabaceae   Adesmia #>       lifeForm     habitat                 Biome            States #> 26790     Tree Terrestrial Atlantic_Forest;Pampa MG;PR;RJ;RS;SC;SP #> 82029 Subshrub Terrestrial       Atlantic_Forest             PR;SC #>                                                                           vegetationType #> 26790 High_Altitude_Grassland;Mixed_Ombrophyllous_Forest;Seasonally_Semideciduous_Forest #> 82029                                                            High_Altitude_Grassland #>       Origin    Endemism taxonomicStatus nomenclaturalStatus #> 26790 Native Non-endemic        Accepted             Correct #> 82029 Native     Endemic        Accepted             Correct #>                                                                  vernacularName #> 26790 araucaria, pinheiro-do-parana, curi, pinheiro-brasileiro, pinho-do-parana #> 82029                                                                      <NA> #>       taxonRank #> 26790   Species #> 82029   Species"},{"path":"https://wevertonbio.github.io/florabr/news/index.html","id":"florabr-100-november-2023","dir":"Changelog","previous_headings":"","what":"florabr 1.0.0 (November 2023)","title":"florabr 1.0.0 (November 2023)","text":"Initial CRAN submission.","code":""}]
